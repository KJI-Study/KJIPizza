<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.mvckjipizza.repository.admin.ProductManagementRepository">
    <resultMap id="product_category" type="com.study.mvckjipizza.domain.ProductCategory">
        <result property="category_id" column="id"></result>
        <result property="category_name" column="category_name"></result>

    </resultMap>

    <resultMap id="PayItemList" type="com.study.mvckjipizza.domain.Option">
        <result property="option_name" column="option_name"></result>
        <result property="option_price" column="option_price"></result>
    </resultMap>

    <resultMap id="salesMap" type="com.study.mvckjipizza.domain.PaymentItems">
        <result property="pdt_name" column="pdt_name"></result>
        <result property="pdt_price" column="pdt_price"></result>

        <result property="stock" column="stock"></result>
        <result property="category_id" column="category_id"></result>
        <collection property="pdt_options" javaType="list" resultMap="PayItemList"></collection>
    </resultMap>



    <select id="getCategoryList" resultMap="product_category">
        select
        id,
        category_name
        from
        pdt_category_mst
    </select>


    <insert id="saveProduct" parameterType="com.study.mvckjipizza.domain.amdin.Product">
        Insert into
            pdt_mst
        values
        (
            0,
            #{category_id},
            #{pdt_name},
            #{pdt_price},
            #{origin_name},
            #{save_name},
            now(),
            now()
        )
    </insert>

    <update id="updateProduct" parameterType="com.study.mvckjipizza.domain.amdin.Product">
        update
            pdt_mst
        set
            <if test="category_id != null"> category_id = #{category_id},</if>
            <if test="pdt_name != null"> pdt_name = #{pdt_name},</if>
            <if test="pdt_price != null"> pdt_price = #{pdt_price},</if>
            <if test="origin_name != null"> origin_name = #{origin_name},</if>
            <if test="save_name != null"> save_name = #{save_name},</if>
            update_date = now()
        where
            id = #{id}

    </update>

    <delete id="deleteProduct" parameterType="com.study.mvckjipizza.domain.amdin.Product">
        delete
        from
            pdt_mst
        where
            id = #{id}
    </delete>
<!--    <insert id="registerImgFiles" parameterType="com.study.mvckjipizza.domain.amdin.Product">-->
<!--        Insert into-->
<!--        pdt_mst-->

<!--        values(-->
<!--        0,-->
<!--        #{category_id},-->
<!--        #{pdt_name},-->
<!--        #{pdt_price},-->
<!--        #{origin_name},-->
<!--        now(),-->
<!--        now()-->
<!--        )-->

<!--    </insert>-->

    <select id="getProductListSelect" resultType="com.study.mvckjipizza.domain.amdin.SelectProduct">
        SELECT
            pm.id AS pdt_id,
            pcm.category_name,
            pm.pdt_name,
            pm.pdt_price
        FROM
            pdt_mst pm
            LEFT OUTER JOIN pdt_category_mst pcm ON(pcm.id = pm.category_id)
        WHERE
            pcm.id = #{categoryName}
    </select>

    <select id="getSalesItems" resultMap="salesMap">
        SELECT
            pm.pdt_name,
            COUNT(pm.pdt_name) as stock,
            pm.pdt_price,
            oop.option_id,
            pm.category_id
        FROM
            order_dtl od
            LEFT OUTER JOIN pdt_mst pm ON(od.pdt_id = pm.id)
            LEFT OUTER JOIN order_option oop ON(od.id = oop.order_dtl_id)
        GROUP BY od.pdt_id
    </select>
</mapper>
